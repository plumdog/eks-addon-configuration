{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "additionalProperties": false,
  "definitions": {
    "limits": {
      "additionalProperties": false,
      "properties": {
        "cpu": {
          "type": "string"
        },
        "memory": {
          "type": "string"
        }
      },
      "title": "limits",
      "type": "object"
    },
    "resources": {
      "additionalProperties": false,
      "properties": {
        "limits": {
          "$ref": "#/definitions/limits"
        },
        "requests": {
          "$ref": "#/definitions/limits"
        }
      },
      "title": "resources",
      "type": "object"
    }
  },
  "description": "AWS Private CA Connector for Kubernetes. Tracks with the configuration options provided in the public helm chart here: https://github.com/cert-manager/aws-privateca-issuer/blob/main/charts/aws-pca-issuer/values.yaml",
  "properties": {
    "affinity": {
      "default": {
        "nodeAffinity": {
          "requiredDuringSchedulingIgnoredDuringExecution": {
            "nodeSelectorTerms": [
              {
                "matchExpressions": [
                  {
                    "key": "kubernetes.io/os",
                    "operator": "In",
                    "values": [
                      "linux"
                    ]
                  },
                  {
                    "key": "kubernetes.io/arch",
                    "operator": "In",
                    "values": [
                      "amd64",
                      "arm64"
                    ]
                  }
                ]
              }
            ]
          }
        },
        "podAntiAffinity": {
          "preferredDuringSchedulingIgnoredDuringExecution": [
            {
              "podAffinityTerm": {
                "labelSelector": {
                  "matchExpressions": [
                    {
                      "key": "app.kubernetes.io/name",
                      "operator": "In",
                      "values": [
                        "aws-privateca-issuer"
                      ]
                    }
                  ]
                },
                "topologyKey": "kubernetes.io/hostname"
              },
              "weight": 100
            }
          ]
        }
      },
      "type": "object"
    },
    "approverRole": {
      "additionalProperties": false,
      "default": {
        "enabled": true,
        "namespace": "cert-manager",
        "serviceAccountName": "cert-manager"
      },
      "properties": {
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "namespace": {
          "default": "cert-manager",
          "type": "string"
        },
        "serviceAccountName": {
          "default": "cert-manger",
          "type": "string"
        }
      },
      "type": "object"
    },
    "nodeSelector": {
      "type": "object"
    },
    "podAnnotations": {
      "type": "object"
    },
    "podDisruptionBudget": {
      "default": {
        "maxUnavailable": 1
      },
      "type": "object"
    },
    "podLabels": {
      "type": "object"
    },
    "replicaCount": {
      "additionalProperties": false,
      "default": 2,
      "type": "integer"
    },
    "resources": {
      "$ref": "#/definitions/resources",
      "default": {
        "limits": {
          "cpu": "50m",
          "memory": "64Mi"
        },
        "requests": {
          "cpu": "50m",
          "memory": "64Mi"
        }
      }
    },
    "tolerations": {
      "default": [
        {
          "key": "CriticalAddonsOnly",
          "operator": "Exists"
        }
      ],
      "items": {
        "type": "object"
      },
      "type": "array"
    },
    "topologySpreadConstraints": {
      "default": [
        {
          "labelSelector": {
            "matchLabels": {
              "app.kubernetes.io/name": "aws-privateca-issuer"
            }
          },
          "maxSkew": 1,
          "topologyKey": "topology.kubernetes.io/zone",
          "whenUnsatisfiable": "ScheduleAnyway"
        }
      ],
      "items": {
        "type": "object"
      },
      "type": "array"
    }
  },
  "type": "object"
}
